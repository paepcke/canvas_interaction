 this is the first of two videos where we learn about relational algebra
 relational algebra is a formal language
 it's an algebra that forms the underpinnings of implemented languages like sql
 in this video we're going to learn the basics of the relational algebra query language and a few of the most popular operators
 in the second video we'll learn some additional operators and some alternate notations for relational algebra
 now let's just review first from our previous video on relational querying that queries over relational databases operate on relations and they also produce relations as a result
 so if we write a query that operates say on the three relations depicted here the result of that query is going to be a new relation
 and in fact we can post queries on that new relation or combine that new relation with our previous relations
 so let's start out with relational algebra
 for the examples in this video we're going to be using a simple college admission relations database with three relations
 the first relation the college relation contains information about the college name state and enrollment of the college
 the second relation the student relation contains an id for each student the student's name gpa and the size of the high school they attended
 and finally the third relation contains information about students applying to colleges
 specifically the student's id the college name where they're applying the major they're applying for and the decision of that application
 i've underlined the keys for these three relations
 as a reminder a key is an attribute or a set of attributes whose value is guaranteed to be unique
 so for example we're going to assume the college names are unique student ids are unique and that students will only apply to each college for a particular major one time
 so we're going to have a picture of these three relations at the bottom of the slides throughout the video
 the simplest query in relational algebra is a query that is simply the name of a relation
 so for example we can write a query student and that's a valid expression in relational algebra
 if we run that query on our database we'll get as a result a copy of the student relation
 pretty straightforward
 now what happens next is that we're going to use operators of the relational algebra to filter relations slice relations and combine relations
 so let's through those operators
 the first operator is the select operator
 so the select operator is used to pick certain rows out of a relation
 the select operator is denoted by a sigma with a subscript that's the condition that's used to filter the rows that we extract from the relations
 so we're just going through three examples here
 the first example says that we want to find the students whose gpa is greater than
 so to write that expression in relational algebra we write the sigma which is the selection operator as a subscript the condition that we're filtering for gpa greater than and the relation over which we're finding that selection predicate
 so this expression will return a subset of the student table containing those rows where the gpa is greater
 if we want to filter for two conditions we just do an and of the conditions in the subscript of the sigma
 so if we want say students whose gpa is greater than and whose high school size is less than a thousand we'll write select gpa greater than
 we used a logical and operator a caret high school size is less than a thousand and again we'll apply that to the student relation
 and once again the result of that will be a subset of the student relation containing the rows that satisfy the condition
 if we want to find the applications to stanford for a cs major then we'll be applying a selection condition to the apply relation
 again we write the sigma and now the subscript is going to say that the college name is stanford and the major is cs
 again the and operator and that will be applied to the apply relation and it will return as a result a subset of the apply relation
 so the general case of the select operator is that we have the sigma
 we have a condition as a subscript and then we have a relation name
 and we return as a result the subset of the relation
 our next operator is the project operator
 so the select operator picks certain rows and the project operator picks certain columns
 so let's say we're interested in the applications but all we wanted to know was the list of id's and the decisions for those applications
 the project operator is written using the greek pi symbol and now the subscript is a list of the column names that we would like to extract
 so we write id sorry student id and decision and we apply that to the apply relation again
 and now what we'll get back is a relation that has just two rows
 it's going to have all the tuples of apply but it's only going to have the student id and the decision columns
 so the general case of a project operator is the projection and then a list of attributes can be any number and then a relation name
 now what if we're interested in picking both rows and columns at the same time
 so we want only some of the rows and we want only some of the columns
 now we're going to compose operators
 remember that relational queries produce relations
 so we can write a query say with the select operator of the students whose gpa is greater than
 and this is how we do that
 and now we can take that whole expression which produces a relation and we can apply the project operator to that and we can get out the student id and the student name
 okay
 so what we actually see now is that the general case of the selection and projection operators weren't quite what i told you at first
 i was deceiving you slightly
 when we write the select operator it's a select with the condition on any expression of the relational algebra and if it's a big one we might want to put parenthesis on it and similarly the project operator is a list of attributes from any expression of the relational algebra
 and we can compose these as much as we want
 we can have select over project over select select project and so on
