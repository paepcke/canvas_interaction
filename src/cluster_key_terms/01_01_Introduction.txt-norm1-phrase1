 welcome to the course introduction to databases
 i'm jennifer widom from stanford university
 in this course we'll be learning about databases and the use of database management systems primarily from the viewpoint of the designer user and developer of database applications
 i'm going to start by describing in one very long sentence what a database management system provides for applications
 it provides a means of handling large amounts of data primarily but let's looks at a little more detail
 what it provides in a long sentence is efficient reliable convenient and safe multi user storage of and access to massive amounts of persistent data
 so i'm going to go into each one of those adjectives in a little bit more detail in a moment
 but i did want to mention that database systems are extremely prevalent in the world today
 they sit behind many websites that will run your banking systems your telecommunications deployments of sensors scientific experiments and much much more
 highly prevalent
 so let's talk a little bit about why database systems are so popular so and prevalent by looking at these seven adjectives
 the first aspect of database systems is that they handle data at a massive scale
 so if you think about the amount of data that is being produced today database systems are handling terabytes of data sometimes even terabytes of data every day
 and one of the critical aspects is that the data that's handled by database management systems systems is much larger than can fit in the memory of a typical computing system
 so memories are indeed growing very very fast but the amount of data in the world and data to be handled by database systems is growing much faster
 so database systems are designed to handle data that to residing outside of memory
 secondly the data that's handled by database management systems is typically persistent
 and what i mean by that is that the data in the database outlives the programs that execute on that data
 so if you run a typical computer program the program will start the variables we created
 there will be data that's operated on the program the program will finish and the data will go away
 it's sort of the other way with databases
 the data is what sits there and then program will start up it will operate on the data the program will stop and the data will still be there
 very often actually multiple programs will be operating on the same data
 next safety
 so database systems since they run critical applications such as telecommunications and banking systems have to have guarantees that the data managed by the system will stay in a consistent state it won't be lost or overwritten when there are failures and there can be hardware failures
 there can be software failures
 even simple power outages
 you don't want your bank balance to change because the power went out at your bank branch
 and of course there are the problem of malicious users that may try to corrupt data
 so database systems have a number of built in mechanisms that ensure that the data remains consistent regardless of what happens
 next multi user
 so i mentioned that multiple programs may operate on the same database
 and even with one program operating on a database that program may allow many different users or applications to access the data concurrently
 so when you have multiple applications working on the same data the system has to have some mechanisms again to ensure that the data stays consistent
 that you don't have for example half of a data item overwritten by one person and the other half overwritten by another
 so there's mechanisms in database systems called concurrency control
 and the idea there is that we control the way multiple users access the database
 now we don't control it by only having one user have exclusive access to the database or the performance would slow down considerably
 so the control actually occurs at the level of the data items in the database
 so many users might be operating on the same database but be operating on different individual data items
 it's a little bit similar to say file system concurrency or even variable concurrency in programs except it's more centered around the data itself
 the next adjective is convenience and convenience is actually one of the critical features of database systems
 they really are designed to make it easy to work with large amounts of data and to do very powerful and interesting processing on that data
 so there's a couple levels at which that happens
 there's a notion in databases called physical data independence
 it's kind of a mouthful but what that's saying is that the way that data is actually stored and laid out on disk is independent of the way that programs think about the structure of the data
 so you could have a program that operates on a database and underneath there could be a complete change in the way the data is stored yet the program itself would not have to be changed
 so the operations on the data are independent from the way the data is laid out
 and somewhat related to that is the notion of high level query languages
 so the databases are usually queried by languages that are relatively compact to describe really at a very high level what information you want from the database
 specifically they obey a notion that's called declarative and what declarative is saying is that in the query you describe what you want out of the database but you don't need to describe the algorithm to get the data out and that's a really nice feature
 it allows you to write queries in a very simple way and then the system itself will find the algorithm to get that data out efficiently
 and speaking of efficiency that's number six but certainly not sixth importance
 there's in real estate as a little aside here a old saying that when you have a piece of property the most important three aspects of the property are the location of the property the location and the location
 and people say the same thing about databases a similar parallel joke which is that the three most important things in a database system is first performance second performance and again performance
 so database systems have to do really thousands of queries or updates per second
 these are not simple queries necessarily
 these may be very complex operations
 so constructing a database system that can execute queries complex queries at that rate over gigantic amounts of data terabytes of data is no simple task and that is one of the major features also provided by a database management system
 and lastly but again not last in importance is reliability
 again looking back at say your banking system or your telecommunications system it's critically important that those are up all the time
 so up time is the type of guarantee that database management systems are making for their applications
 so that gives us an idea of all the terrific things that a database system provides
 i hope you're all ready convinced that if you have a application you want to build that involves data it would be great to have all of these features provided for you in a database system
 now let me mention a few of the aspects surrounding database systems and scope a little bit what we're going to be covering in this course
 when people build database applications sometimes they program them with what's known as a framework
 currently at the time of this video some of the popular frameworks are django or ruby on rails and these are environments that help you develop your programs and help you generate say the calls to the database system
 we're not in this set of videos going to be talking about the frameworks but rather we're going to be talking about the data base system itself and how it is used and what it provides
 second of all database systems are often used in conjunction with what's known as middle ware
 again at the time of this video typical middle ware might be application servers web servers so this middle ware helps applications interact with database systems in certain types of ways
 again that's sort of outside the scope of the course
 we won't be talking about middleware in the course
 finally it's not the case that every application that involves data necessarily uses the database system so historically a lot of data has been stored in files i think that's a little bit less so these days
 still there's a lot of data out there that's simply sitting in files
 excel spreadsheets is another domain where there's a lot of data sitting out there and it's useful in certain ways and the processing of data is not always done through query languages associated with database systems
 for example hadoop is a processing framework for running operations on data that's stored in files
 again in this set of videos we're going to focus on the database management system itself and on storing and operating on data through a database management system
 so there are four key concepts that we're going to cover for now
 the first one is the data model
 the data model is a description of in general how the data is structured
 one of the most common data models is the relational dot data model we'll spend quite a bit of time on that
 in the relational data model the data and the database is thought of as a set of records
 now another popular way to store data is for example in xml documents so an xml document captures data instead of a set of records as a hierarchical structure of labeled values
 another possible data model would be a graph data model or all data in the database is in the form of nodes and edges
 so again a data model is telling you the general form of data that's going to be stored in the database
 next is the concept of schema versus data
 one can think of this kind of like types and variables in a programming language
 the schema sets up the structure of the database
 maybe i'm going to have information about students with ids and gpas or about colleges and it's just going to tell me the structure of the database where the data is the actual data stored within the schema
 again in a program you set up types and then you have variables of those types we'll set up a schema and then we will have a whole bunch of data that adheres to that schema
 typically the schema is set up at the beginning and doesn't change very much where the data changes rapidly
 now to set up the schema one normally uses what's known as a data definition language
 sometimes people use higher level design tools that help them think about the design and then from there go to the data definition language
 but it's used in general to set up a scheme or structure for a particular database
 once the schema has been set up and data has been loaded then it's possible to start querying and modifying the data and that's typically done with what's known as the data manipulation language so for querying and modifying the database
 okay so those are some key concepts certainly we're going to get in to much more detail in later videos about each of these concepts
 now let's talk about the people that are involved in a database system
 so the first person we'll mention is the person who implements the database system itself the database implementer
 that's the person who builds the system that's not going to be the focus of this course
 we're going to be focusing more on the types of things that are done by the other three people that i'm going to describe
 the next one is the database designer
 so the database designer is the person who establishes the schema for a database
 so let's suppose we have an application
 we know there's going to be a lot of data involved in the application and we want to figure out how we are gonna structure that data before we build the application
 that's the job of the database designer
 it's a surprisingly difficult job when you have a very complex data involved in an application
 once you've established the structure of the database then it's time to build the applications or programs that are going to run on the database often interfacing between the eventual user and the data itself and that's the job of the application developer so those are the programs that operate on the database
 and again i've mentioned already that you can have a database with many different programs that operate on it be very common
 you might for example have a sales database where some applications are actually inserting the sales as they happen while others are analyzing the sales
 so it's not necessary to have a one to one coupling between programs and databases
 and the last person is the database administrator
 so the database administrator is the person who loads the data sort of gets the whole thing running and keeps it running smoothly
 so this actually turns out to be a very important job for large database applications
 for better or worse database systems do tend to have a number of tuning parameters associated with them and getting those tuning parameters right can make a significant difference in the all important performance of the database system
 so database administrators are actually highly valued very important highly paid as a matter of fact and are for large deployments an important person in the entire process
 so those are the people that are involved again in this class we'll be focusing mostly on designing and developing applications a little bit on administration but in general thinking about databases and the use of database management systems from the perspective of the application builder and user
 to conclude we're going to be learning about databases and whether you know it or not not you're already using a database every day
 in fact more likely than not you're using a database every hour
